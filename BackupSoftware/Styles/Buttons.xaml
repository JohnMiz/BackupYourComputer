<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BackupSoftware.Styles">
     
     <!-- HoverlessButton -->
     <Style TargetType="{x:Type Button}" x:Key="HoverlessButton">
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                         <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                         </Border>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>

     <!-- MouseHover HoverlessButton -->
     <Style TargetType="{x:Type Button}" x:Key="MouseHoverHoverlessButton">
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                         <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                         </Border>
                         <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="True">
                                   <Setter Property="Foreground" Value="White" />
                              </Trigger>
                         </ControlTemplate.Triggers>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>

     <!-- Custom Button -->
     <Style TargetType="{x:Type Button}" x:Key="CustomButton">
          <Setter Property="Background" Value="White" />
          <Setter Property="Padding" Value="10" />
          <Setter Property="HorizontalAlignment" Value="Center" />
          <Setter Property="VerticalAlignment" Value="Center" />
          <Setter Property="FontSize" Value="15" />
          <Setter Property="FontFamily" Value="Segoe UI" />
          <Setter Property="FontWeight" Value="Bold" />
          <Setter Property="Foreground" Value="{StaticResource DarkBlueBrush}" />
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                         <Border x:Name="Chrome"
                                      BorderBrush="{StaticResource DarkBlueBrush}"
                                      Background="{TemplateBinding Background}" 
                                      SnapsToDevicePixels="true"
                                      BorderThickness="2">
                              <Viewbox>
                                   <ContentPresenter HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Margin="{TemplateBinding Padding}" 
                                                     RecognizesAccessKey="True" 
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                              </Viewbox>
                         </Border>
                         <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="true">
                                   <Setter Property="Background" Value="LightGray" />
                              </Trigger>
                         </ControlTemplate.Triggers>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>

     <Style TargetType="Button" x:Key="TestButton">
          <Setter Property="Background" Value="Black" />
          <Setter Property="Foreground" Value="Wheat"/>
     </Style>

     <!-- System icon button -->
     <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource HoverlessButton}">
          <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
          
     </Style>
     
          <!-- Window button -->
     <Style x:Key="WindowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SystemIconButton}">
          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
          <Setter Property="Padding" Value="1"/>
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                         <Border x:Name="Chrome"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Background="{TemplateBinding Background}" 
                                      SnapsToDevicePixels="true"
                                      Padding="10">
                              <ContentPresenter HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Margin="{TemplateBinding Padding}" 
                                                     RecognizesAccessKey="True" 
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                     />
                         </Border>
                         <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="true">
                                   <Setter Property="Background" Value="LightGray" />
                              </Trigger>
                         </ControlTemplate.Triggers>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>

     <!-- Close window button -->
     <Style x:Key="CloseWindowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButton}">
          <Style.Triggers>
               <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="IndianRed" />
               </Trigger>
          </Style.Triggers>
     </Style>
    

</ResourceDictionary>